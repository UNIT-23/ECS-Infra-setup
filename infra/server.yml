AWSTemplateFormatVersion: '2010-09-09'
Description: container on ecs cluster

Resources:  
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      # The name of a family that this task definition is registered to.  A family groups multiple versions of a task definition
      Family: !Join ['', [!Ref 'AWS::StackName', -ecs-demo-app]]
      Cpu: 128
      Memory: 100
      # [none, bridge, awsvpc, and host]
      NetworkMode: bridge
      RequiresCompatibilities:
        - EC2
      # When you register a task definition, you can provide a task execution role that allows the containers in the task to pull container images and publish container logs to CloudWatch on your behalf 
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: nginx-server
          Image: !Join ["", [!Ref "AWS::AccountId", ".dkr.ecr.", !Ref "AWS::Region", ".amazonaws.com/", "nginx-ecs", ":v1"]]
          Cpu: 10
          Memory: 50
          Essential: true
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          # LogConfiguration:
            # LogDriver: awslogs
            # Options:
              # awslogs-group: 'apis'
              # awslogs-region: !Ref AWS::Region
              # awslogs-stream-prefix: 'books-api'


  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster: !ImportValue 'ECSCluster'
      ServiceName: 'NginxService'
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      LoadBalancers:
      - ContainerName: nginx-server
        ContainerPort: 80
        TargetGroupArn: !Ref TargetGroup
      # Role: !Ref 'ECSServiceRole'
      TaskDefinition: !Ref Task
 
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    # DependsOn: ECSALB
    Properties:
      Name: nginx-tg
      VpcId: !ImportValue VPC
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /stat
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: instance

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue Listener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /*
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:
  ApiEndpoint:
    Description: Books API Endpoint
    Value: !Join ['', ['http://', !ImportValue DomainName, '/']]
    Export:
      Name: 'BooksApiEndpoint'
