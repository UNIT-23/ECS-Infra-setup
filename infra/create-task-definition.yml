AWSTemplateFormatVersion: '2010-09-09'
Description: creates Task Definition


Resources:
 TodoTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      # The name of a family that this task definition is registered to.  A family groups multiple versions of a task definition
      Family: !Join ['', [!Ref 'AWS::StackName', '-ecs-demo-app']]
      Cpu: 512
      Memory: 300
      # [none, bridge, awsvpc, and host]
      NetworkMode: bridge
      RequiresCompatibilities:
        - EC2
      # When you register a task definition, you can provide a task execution role that allows the containers in the task to pull container images and publish container logs to CloudWatch on your behalf 
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      TaskRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
      - Name: server
        Image: !Join ["", [!Ref "AWS::AccountId", ".dkr.ecr.", !Ref "AWS::Region", ".amazonaws.com/", "server", ":latest"]]
        Cpu: 128
        Memory: 70
        Essential: true
        PortMappings:
        - ContainerPort: 8081
          HostPort: 0
          Protocol: tcp
      - Name: client
        Image: !Join ["", [!Ref "AWS::AccountId", ".dkr.ecr.", !Ref "AWS::Region", ".amazonaws.com/", "client", ":latest"]]
        Cpu: 128
        Memory: 70
        PortMappings:
        - ContainerPort: 8080
          HostPort: 0
          Protocol: tcp
      - Name: db
        Image: !Join ["", [!Ref "AWS::AccountId", ".dkr.ecr.", !Ref "AWS::Region", ".amazonaws.com/", "mongo", ":latest"]]
        Cpu: 128
        Memory: 70
        PortMappings:
        - ContainerPort: 27017
          HostPort: 0
          Protocol: tcp            
          



Outputs:
  TodoTask:
    Description: 'ECS Task Definition'
    Value: !Ref TodoTask
    Export:
      Name: 'TodoTask'  